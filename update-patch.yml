- name: Apply Security Updates & Perform Health Check on Linux & Windows
  hosts: all
  gather_facts: yes

  tasks:

    # Get Current Date-Time
    - name: Get current date and time
      command: date +"%Y-%m-%d_%H-%M"
      register: current_datetime
      delegate_to: localhost
      run_once: true

    # =============================
    # ðŸ”¹ Linux Patching & Updates
    # =============================

    - name: Check Available Security Updates (Linux)
      command: apt list --upgradable | grep 'security'
      register: available_updates
      failed_when: available_updates.rc != 0 and available_updates.rc != 1
      changed_when: false
      when: ansible_os_family == "Debian"

    - name: Update package cache (Linux)
      ansible.builtin.apt:
        update_cache: yes
      when: ansible_os_family == "Debian"

    - name: Install security updates (Linux)
      ansible.builtin.apt:
        upgrade: dist
        autoremove: yes
      when: ansible_os_family == "Debian"

    - name: List Installed Security Updates (Linux)
      command: apt list --installed | grep 'security'
      register: installed_updates
      failed_when: installed_updates.rc != 0 and installed_updates.rc != 1
      changed_when: false
      when: ansible_os_family == "Debian"

    - name: Check if a reboot is required (Linux)
      stat:
        path: /var/run/reboot-required
      register: reboot_required_file
      when: ansible_os_family == "Debian"

    - name: Reboot the system if required (Linux)
      reboot:
      when: reboot_required_file.stat is defined and reboot_required_file.stat.exists and ansible_os_family == "Debian"

    # =============================
    # ðŸ”¹ Windows Patching & Updates
    # =============================

    - name: Install Windows Updates (Security & Definition Updates)
      win_updates:
        category_names:
          - SecurityUpdates
          - DefinitionUpdates
          - UpdateRollups
        reboot: yes
      register: windows_updates
      when: ansible_os_family == "Windows"

    - name: Format Installed Windows Updates Log
      set_fact:
        windows_updates_log: |
          ðŸ”¹ **Windows Updates Installed**
          ------------------------------
          {% for update in windows_updates.installed_update_names %}
            - {{ update }}
          {% endfor %}
      when: ansible_os_family == "Windows"

    # =============================
    # ðŸ”¹ System Health Checks (Linux)
    # =============================

    - name: Check Uptime (Linux)
      command: uptime
      register: uptime_output
      when: ansible_os_family == "Debian"

    - name: Check Disk Usage (Linux)
      command: df -h /
      register: disk_usage
      when: ansible_os_family == "Debian"

    - name: Check Memory Usage (Linux)
      command: free -m
      register: memory_usage
      when: ansible_os_family == "Debian"

    - name: Check CPU Load (Linux)
      shell: top -bn1 | grep "load average"
      register: cpu_load
      when: ansible_os_family == "Debian"

    - name: Check Running Services (Linux)
      command: systemctl list-units --type=service --state=running
      register: running_services
      when: ansible_os_family == "Debian"

    # =============================
    # ðŸ”¹ System Health Checks (Windows)
    # =============================

    - name: Get Windows System Uptime
      win_shell: (Get-CimInstance Win32_OperatingSystem).LastBootUpTime
      register: win_uptime
      when: ansible_os_family == "Windows"

    - name: Get Disk Usage (Windows)
      win_shell: Get-PSDrive C | Select-Object Used, Free, @{Name='Total';Expression={$_.Used + $_.Free}}
      register: win_disk_usage
      when: ansible_os_family == "Windows"

    - name: Get Memory Usage (Windows)
      win_shell: Get-CimInstance Win32_OperatingSystem | Select-Object FreePhysicalMemory, TotalVisibleMemorySize
      register: win_memory_usage
      when: ansible_os_family == "Windows"

    - name: Get CPU Load (Windows)
      win_shell: Get-Counter '\Processor(_Total)\% Processor Time' | Select-Object -ExpandProperty CounterSamples
      register: win_cpu_load
      when: ansible_os_family == "Windows"

    - name: Get Running Processes (Windows)
      win_shell: Get-Process | Select-Object ProcessName, CPU
      register: win_processes
      when: ansible_os_family == "Windows"

    # =============================
    # ðŸ”¹ Formatting Logs for Compliance
    # =============================

    - name: Format Health Check Log (Linux)
      set_fact:
        formatted_log: |
          ======================================================
          âœ… Server: {{ inventory_hostname }}
          ðŸ•’ Timestamp: {{ current_datetime.stdout }}
          ======================================================

          ðŸ”¹ **System Uptime**
          --------------------
          {{ uptime_output.stdout }}

          ðŸ”¹ **Disk Usage**
          -----------------
          {{ disk_usage.stdout }}

          ðŸ”¹ **Memory Usage**
          -------------------
          {{ memory_usage.stdout }}

          ðŸ”¹ **CPU Load**
          ---------------
          {{ cpu_load.stdout }}

          ðŸ”¹ **Running Services**
          -----------------------
          {{ running_services.stdout }}

          ðŸ”¹ **Linux Updates Installed**
          ------------------------------
          {% for update in installed_updates.stdout_lines %}
            - {{ update }}
          {% endfor %}
          
          ======================================================
      when: ansible_os_family == "Debian"

    - name: Format Health Check Log (Windows)
      set_fact:
        formatted_log: |
          ======================================================
          âœ… Server: {{ inventory_hostname }}
          ðŸ•’ Timestamp: {{ current_datetime.stdout }}
          ======================================================

          ðŸ”¹ **System Uptime**
          --------------------
          {{ win_uptime.stdout }}

          ðŸ”¹ **Disk Usage**
          -----------------
          {{ win_disk_usage.stdout }}

          ðŸ”¹ **Memory Usage**
          -------------------
          {{ win_memory_usage.stdout }}

          ðŸ”¹ **CPU Load**
          ---------------
          {{ win_cpu_load.stdout }}

          ðŸ”¹ **Running Processes**
          -----------------------
          {{ win_processes.stdout }}

          ðŸ”¹ **Windows Updates Installed**
          ------------------------------
          {% for update in windows_updates.installed_update_names %}
            - {{ update }}
          {% endfor %}

          ======================================================
      when: ansible_os_family == "Windows"

    # =============================
    # ðŸ”¹ Save Logs for Compliance
    # =============================

    - name: Save Formatted Log File (Linux)
      local_action:
        module: copy
        content: "{{ formatted_log }}"
        dest: "/var/log/ansible_health_checks_{{ inventory_hostname }}_{{ current_datetime.stdout }}.log"
      when: ansible_os_family == "Debian"

    - name: Save Formatted Log File (Windows)
      local_action:
        module: copy
        content: "{{ formatted_log }}"
        dest: "/var/log/ansible_health_checks_{{ inventory_hostname }}_{{ current_datetime.stdout }}.log"
      when: ansible_os_family == "Windows"
